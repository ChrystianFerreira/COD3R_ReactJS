{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projetos\\\\React\\\\cod3r\\\\cod3r-react-redux\\\\fundamentos-react\\\\src\\\\components\\\\basicos\\\\DesafioNumeroAleatorio.jsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default (props => {\n  const {\n    min,\n    max\n  } = props;\n  const randomNumber = Math.floor(Math.random() * (max - min + 1)) + min;\n  ;\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    children: [\"N\\xFAmero aleat\\xF3rio entre \", /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: props.min\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 34\n    }, this), \" e \", /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: props.max\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 67\n    }, this), \": \", /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: randomNumber\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 99\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n});","map":{"version":3,"sources":["C:/Projetos/React/cod3r/cod3r-react-redux/fundamentos-react/src/components/basicos/DesafioNumeroAleatorio.jsx"],"names":["React","props","min","max","randomNumber","Math","floor","random"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,gBAAgBC,KAAD,IAAW;AAExB,QAAM;AAAEC,IAAAA,GAAF;AAAOC,IAAAA;AAAP,MAAeF,KAArB;AACA,QAAMG,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBJ,GAAG,GAAGD,GAAN,GAAY,CAA7B,CAAX,IAA8CA,GAAnE;AAAuE;AAEvE,sBACE;AAAA,6DAA6B;AAAA,gBAAUD,KAAK,CAACC;AAAhB;AAAA;AAAA;AAAA;AAAA,YAA7B,sBAA8D;AAAA,gBAAUD,KAAK,CAACE;AAAhB;AAAA;AAAA;AAAA;AAAA,YAA9D,qBAA8F;AAAA,gBAAUC;AAAV;AAAA;AAAA;AAAA;AAAA,YAA9F;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CARD","sourcesContent":["import React from \"react\";\r\n\r\nexport default (props) => {\r\n\r\n  const { min, max } = props;\r\n  const randomNumber = Math.floor(Math.random() * (max - min + 1)) + min;;\r\n\r\n  return (\r\n    <span>Número aleatório entre <strong>{ props.min }</strong> e <strong>{ props.max }</strong>: <strong>{ randomNumber }</strong></span>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}